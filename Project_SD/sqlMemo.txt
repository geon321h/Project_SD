drop sequence userSD_seq;
create sequence userSD_seq
increment by 1
start with 1
minvalue 1
;

drop TABLE userSD CASCADE CONSTRAINTS;
create table userSD(
 no number primary key,
 email varchar2(30) not null UNIQUE check(email like '%@__%.__%'),
 pw varchar2(20) not null check(length(pw)>=8),
 name varchar2(18) not null check(length(name)<=6),
 birth Date not null
);

insert into userSD VALUES (userSD_seq.nextval,'geon21h@naver.com','qwer1234~','거니',sysdate);
insert into userSD VALUES (userSD_seq.nextval,'qwe123@daum.net','1234qwer','김사람',sysdate);
insert into userSD VALUES (userSD_seq.nextval,'kim12@naver.com','asdf1234','홍길동',sysdate);
insert into userSD VALUES (userSD_seq.nextval,'k321@naver.com','asdf1234','가나다라마바',sysdate);
insert into userSD VALUES (userSD_seq.nextval,'tae@naver.com','12341234','태연','2020-12-2');
insert into userSD VALUES (userSD_seq.nextval,'su@daum.net','12341234','수연','2000-7-3');
insert into userSD VALUES (userSD_seq.nextval,'mi@naver.com','12341234','미연','2012-1-23');
insert into userSD VALUES (userSD_seq.nextval,'ga@naver.com','12341234','가연','1990-8-17');
 
SELECT * FROM USERSD order by NO;

drop TABLE friendSD CASCADE CONSTRAINTS;
create table friendSD(
 user_no number not NULL REFERENCES userSD(no) on delete cascade,
 friend_no number not null REFERENCES userSD(no) on delete cascade,
 friend_check varchar2(2) DEFAULT 'N' check(friend_check in('Y','N'))
);

insert into friendSD VALUES ('1','2','Y');
insert into friendSD VALUES ('1','3','Y');
insert into friendSD VALUES ('1','4','Y');
insert into friendSD VALUES ('2','3','Y');
insert into friendSD VALUES ('3','4','Y');
insert into friendSD(user_no,FRieND_NO) VALUES ('1','5');
insert into friendSD(user_no,FRieND_NO) VALUES ('1','6');
insert into friendSD(user_no,FRieND_NO) VALUES ('7','1');
insert into friendSD(user_no,FRieND_NO) VALUES ('8','1');

SELECT * FROM friendSD;

SELECT fSD.USER_NO MY_NO,uSD.no friend_NO,uSD.name,uSD.BIRTH 
FROM  userSD uSD 
      inner join friendSD fSD 
      on uSD.NO = fSD.friend_NO 
where fSD.USER_NO =1 
and fSD.FRieND_CHECK = 'Y';

SELECT fSD.FRieND_NO MY_NO,uSD.no as friend_NO,uSD.name,uSD.BIRTH 
FROM  userSD uSD 
      inner join friendSD fSD 
      on uSD.NO = fSD.USER_NO 
where fSD.FRieND_NO =1 
and fSD.FRieND_CHECK = 'Y';

select myF.MY_NO,myF.FRieND_NO,fInfo.NAME,fInfo.BIRTH
from (SELECT '1' AS MY_NO,(CASE WHEN '1' = USER_NO THEN FRieND_NO ELSE USER_NO END ) AS FRieND_NO
      FROM friendSD  
      where (USER_NO = '1' OR FRieND_NO = '1')
      and FRieND_CHECK = 'Y') myF 
      inner join userSD fInfo
      on myF.FRieND_NO = fInfo.NO;
      
select myF.FRieND_NO,fInfo.NAME,fInfo.BIRTH
from (SELECT (CASE WHEN 1 = USER_NO THEN FRieND_NO ELSE USER_NO END) AS FRieND_NO
      FROM friendSD  
      where (USER_NO = 1 OR FRieND_NO = 1)
      and FRieND_CHECK = 'Y') myF 
      inner join userSD fInfo
      on myF.FRieND_NO = fInfo.NO;

delete friendSD 
where ((friend_no = 1 and user_no = 3)
      OR (friend_no = 3 and user_no = 1))
      AND FRIEND_CHECK = 'Y';
      
SELECT * FROM friendSD;

SELECT fInfo.NAME,fr.USER_NO
FROM (SELECT USER_NO,FRIEND_NO 
      FROM friendSD 
      where FRIEND_NO = 1 
      and FRIEND_CHECK = 'N') fr
      ,USERSD fInfo
where fr.USER_NO = fInfo.NO;

SELECT fInfo.NAME,fr.FRIEND_NO
FROM (SELECT USER_NO,FRIEND_NO 
      FROM friendSD 
      where USER_NO = 1 
      and FRIEND_CHECK = 'N') fr
      ,USERSD fInfo
where fr.FRIEND_NO = fInfo.NO;

update friendSD 
set FRIEND_CHECK = 'Y'
where user_no = 22 and friend_no = 21
      AND FRIEND_CHECK = 'N';
      
delete friendSD 
where friend_no = 3 and user_no = 1
      AND FRIEND_CHECK = 'N';

SELECT * FROM friendSD where(friend_no = 1 and user_no = 8 ) AND FRIEND_CHECK = 'N';

